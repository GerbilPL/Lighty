plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

version = "${mod_version}+${minecraft_version}"
group = rootProject.findProperty("maven_group")

base {
    archivesName = "${mod_id}-fabric"
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {url = "https://maven.terraformersmc.com/releases/"}  // Mod Menu repository
}

loom {
    mixin {
        defaultRefmapName.set("lighty.refmap.json")
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    // modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.findProperty("fabric_api_version")}"
    Set<String> apiModules = [
            "fabric-api-base", // Base stuff, yk
            "fabric-lifecycle-events-v1", // To execute stuff every tick
            "fabric-rendering-v1", // For injecting into the right render stuff
            "fabric-resource-loader-v0", // to stitch our textures into the atlas
            "fabric-key-binding-api-v1", // For keybindings, yk
    ]
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, rootProject.findProperty("fabric_api_version"))))
    }

    // Mod Menu
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
    modImplementation fabricApi.module("fabric-screen-api-v1", rootProject.findProperty("fabric_api_version"))

    compileOnly project(":common")
}

compileJava {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            mod_id: mod_id,
            mod_name: mod_name,
            mod_license: mod_license,
            mod_version: mod_version,
            mod_authors: mod_authors,
            mod_description: mod_description,
            issue_url: issue_url,
            modmenu_version: modmenu_version,
            fabric_loader_version: fabric_loader_version,
            minecraft_version_lower_bound: minecraft_version_lower_bound
    ]

    inputs.properties replaceProperties

    from project(":common").sourceSets.main.resources

    filesMatching("fabric.mod.json") {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}
